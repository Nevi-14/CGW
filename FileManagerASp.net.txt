
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using System.Web.Http.Cors;
using System.IO;


namespace API_IRP_Test.Controllers
{
    public class GestorArchivosController : ApiController
    {




       



        [Route("api/descargar-archivo")]
        [EnableCorsAttribute(origins: "*", headers: "*", methods: "*")]
        [HttpGet()]
        public  HttpResponseMessage Get(string ID, string tipo, string nombre)
        {
           
            using (Models.PRUEBASEntities entities = new Models.PRUEBASEntities())
            {

                HttpResponseMessage result = new HttpResponseMessage(System.Net.HttpStatusCode.OK);
               // return nombre;
                var tabla = entities.ONE_OC_Gestor_Archivos.FirstOrDefault(e => e.ORDEN_COMPRA == ID && e.Tipo == tipo && e.Nombre == nombre); //AQUI FILTRA

             



                var remoteUri = Path.GetPathRoot(Environment.SystemDirectory) + "Archivos\\" + tabla.Folder;
                var myStringWebResource = remoteUri;
                var path = remoteUri + "\\" + tabla.Nombre;
                var stream = new MemoryStream(System.IO.File.ReadAllBytes(path));

                if(stream == null)
                {
                    return Request.CreateResponse(System.Net.HttpStatusCode.NotFound); 
                }

                result.Content = new StreamContent(stream);

                // attatment / inline
                result.Content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("attatchment");

                result.Content.Headers.ContentDisposition.FileName = tabla.Nombre;
                result.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/" + tipo);
                result.Content.Headers.ContentLength = stream.Length;
                return result;
            }
           

         
            
        }



    

    [Route("api/cargar-archivo")]
        [EnableCorsAttribute(origins: "*", headers: "*", methods: "*")]
        [HttpPost()]
        public string cargarArchivo(string tipo)
        {
            int iUploadedCnt = 0;

            // DEFINE THE PATH WHERE WE WANT TO SAVE THE FILES.
            string sPath = "";
            //string filePath = Path.GetPathRoot(Environment.SystemDirectory) + "inetpub\\api_irp_test_file_manager";

            string filePath = Path.GetPathRoot(Environment.SystemDirectory) + "Archivos";

            if (tipo == "file")
            {

                sPath = filePath + "\\Files\\";

                //  System.Web.Hosting.HostingEnvironment.MapPath("~/Files/")
            }
            else
            {
                sPath = filePath + "\\Images\\";
                // sPath = System.Web.Hosting.HostingEnvironment.MapPath("~/Images/");
            }


            //  return sPath  ;
            if (!Directory.Exists(sPath))
                Directory.CreateDirectory(sPath);


            System.Web.HttpFileCollection hfc = System.Web.HttpContext.Current.Request.Files;
            //   return Request.CreateResponse(System.Web.HttpContext.Current.Request);
            //     
            // CHECK THE FILE COUNT.
            for (int iCnt = 0; iCnt <= hfc.Count - 1; iCnt++)
            {
                System.Web.HttpPostedFile hpf = hfc[iCnt];




                if (hpf.ContentLength > 0)
                {





                    // CHECK IF THE SELECTED FILE(S) ALREADY EXISTS IN FOLDER. (AVOID DUPLICATE)
                    if (!File.Exists(sPath + Path.GetFileName(hpf.FileName)))
                    {
                        // SAVE THE FILES IN THE FOLDER.
                        hpf.SaveAs(sPath + Path.GetFileName(hpf.FileName));
                        iUploadedCnt = iUploadedCnt + 1;
                    }
                    else
                    {
                        File.Delete(sPath + Path.GetFileName(hpf.FileName));
                        hpf.SaveAs(sPath + Path.GetFileName(hpf.FileName));
                        iUploadedCnt = iUploadedCnt + 1;
                    }
                }
            }

            // RETURN A MESSAGE (OPTIONAL).
            if (iUploadedCnt > 0)
            {
                return "El Archivo se Guardo con Exito!.";
            }
            else
            {
                return "Error Cargando El Archivo";
            }
        }



    }
}